events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Upstream definitions for load balancing
    upstream api_gateway {
        least_conn;
        server api-gateway:8000 max_fails=3 fail_timeout=30s;
        # Add more instances here for scaling:
        # server api-gateway-2:8000 max_fails=3 fail_timeout=30s;
    }

    upstream frontend {
        least_conn;
        server frontend:8501 max_fails=3 fail_timeout=30s;
        # Add more instances here for scaling:
        # server frontend-2:8501 max_fails=3 fail_timeout=30s;
    }

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=frontend:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=redirect:10m rate=50r/s;

    # Logging configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_types
        application/javascript
        application/json
        application/xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # Security headers map
    map $sent_http_content_type $security_headers {
        ~*text/html "nosniff";
        default "";
    }

    # Main server block
    server {
        listen 80;
        server_name localhost _;
        client_max_body_size 10M;

        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options $security_headers always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header X-Robots-Tag "noindex, nofollow" always;

        # Remove server identification
        server_tokens off;

        # Health check endpoint (bypass all processing)
        location = /health {
            access_log off;
            return 200 "üè∞ Links from Liliput Kingdom is healthy!\n";
            add_header Content-Type text/plain;
        }

        # Nginx status (for monitoring)
        location = /nginx-status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.21.0.0/16;  # Docker network
            deny all;
        }

        # Frontend routes (Streamlit) - Main application
        location / {
            limit_req zone=frontend burst=50 nodelay;
            
            # Proxy to frontend
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # WebSocket support for Streamlit
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_buffering off;
            
            # Timeouts for WebSocket
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
            proxy_connect_timeout 30s;
            
            # Handle errors gracefully
            proxy_intercept_errors on;
            error_page 502 503 504 /50x.html;
        }

        # API routes
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # API timeouts
            proxy_read_timeout 30s;
            proxy_send_timeout 30s;
            proxy_connect_timeout 10s;
            
            # Handle errors
            proxy_intercept_errors on;
            error_page 502 503 504 /50x.html;
        }

        # Health check routes for services
        location /health/ {
            proxy_pass http://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Short URL redirects (highest priority)
        location ~ ^/[a-zA-Z0-9_-]+$ {
            limit_req zone=redirect burst=100 nodelay;
            
            proxy_pass http://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Fast timeouts for redirects
            proxy_read_timeout 10s;
            proxy_send_timeout 10s;
            proxy_connect_timeout 5s;
            
            # Cache successful redirects briefly
            proxy_cache_valid 301 302 1m;
        }

        # Streamlit specific routes
        location /_stcore {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_buffering off;
            proxy_read_timeout 86400s;
        }

        # Static files optimization
        location /static {
            proxy_pass http://frontend;
            proxy_cache_valid 200 1h;
            expires 1h;
            add_header Cache-Control "public, immutable";
        }

        # Favicon and common static assets
        location ~* \.(ico|css|js|gif|jpeg|jpg|png|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://frontend;
            expires 1d;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # Error pages
        location = /50x.html {
            root /usr/share/nginx/html;
        }

        # Block access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Block access to backup and config files
        location ~* \.(bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # SSL server block (for production)
    # server {
    #     listen 443 ssl http2;
    #     server_name yourdomain.com;
    #     
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_session_timeout 1d;
    #     ssl_session_cache shared:SSL:50m;
    #     ssl_session_tickets off;
    #     
    #     # Modern configuration
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
    #     ssl_prefer_server_ciphers off;
    #     
    #     # HSTS
    #     add_header Strict-Transport-Security "max-age=63072000" always;
    #     
    #     # Same location blocks as above...
    # }
}