version: '3.8'

services:
  # API Gateway
  api-gateway:
    build: ./api-gateway
    ports:
      - "8000:8000"
    environment:
      - URL_SERVICE_URL=http://url-service:8001
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
      - url-service
    networks:
      - microservices

  # URL Shortener Service
  url-service:
    build: ./url-service
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://username:password@postgres:5432/url_shortener_db
      - REDIS_URL=redis://redis:6379/0
      - SERVICE_PORT=8001
    depends_on:
      - postgres
      - redis
    networks:
      - microservices

  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: url_shortener_db
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - microservices

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - microservices

  # Nginx Load Balancer (Optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api-gateway
    networks:
      - microservices

volumes:
  postgres_data:
  redis_data:

networks:
  microservices:
    driver: bridge